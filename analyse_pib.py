# -*- coding: utf-8 -*-
"""Analyse PIB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1z8xsxVsNKRAEecBvHtSOr5prWK_ZRsHx
"""

# Code Python visible à l'utilisateur : Analyse du PIB (exemple pour le Maroc)
# Ce script tente d'abord de récupérer les données depuis la Banque mondiale si la connexion est disponible.
# S'il n'y a pas d'accès Internet depuis l'environnement d'exécution, il utilise un jeu de données exemple
# couvrant 2000-2024 (valeurs approximatives en USD courants) pour démontrer les calculs et graphiques.
#
# Le code produit :
# 1) un tableau avec le PIB nominal, la croissance annuelle et la croissance moyenne mobile (3 ans)
# 2) un graphique du PIB nominal et du taux de croissance annuel
# 3) quelques statistiques clés (CAGR, moyenne de croissance)
#
# Remarque : pour récupérer les vraies données depuis la Banque mondiale sur votre machine,
# installez pandas-datareader : pip install pandas-datareader
# et exécutez le script dans un environnement avec accès Internet.

import warnings
warnings.filterwarnings("ignore", category=FutureWarning)

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

def fetch_worldbank_gdp(country_code='MAR', indicator='NY.GDP.MKTP.CD', start=2000, end=2024):
    """
    Tente de récupérer le PIB nominal (en USD courants) depuis la Banque mondiale via pandas_datareader.
    Si la récupération échoue (pas d'Internet dans cet environnement), on lève une exception.
    """
    try:
        from pandas_datareader import wb
        df = wb.download(indicator=indicator, country=country_code, start=start, end=end)
        # wb.download renvoie un DataFrame avec une colonne pour l'indicateur
        df = df.reset_index().rename(columns={'year':'Year', indicator: 'GDP_USD'})
        df = df[['Year', 'GDP_USD']].sort_values('Year').reset_index(drop=True)
        return df
    except Exception as e:
        raise RuntimeError("Impossible de récupérer depuis la Banque mondiale ici: " + str(e))

# Jeu de données de secours (valeurs approximatives en USD courants) pour démonstration
years = list(range(2000, 2025))
gdp_values_example = [
    34000e6, 35000e6, 36000e6, 38000e6, 41000e6, 43000e6, 46000e6, 48000e6, 50000e6, 52000e6,
    54000e6, 56000e6, 59000e6, 61000e6, 63000e6, 65000e6, 68000e6, 71000e6, 74000e6, 77000e6,
    80000e6, 84000e6, 88000e6, 92000e6, 97000e6
]

df = None
try:
    df = fetch_worldbank_gdp(start=2000, end=2024)
    source = "World Bank (pandas_datareader)"
except RuntimeError:
    # On utilise le jeu d'exemple intégré
    df = pd.DataFrame({'Year': years, 'GDP_USD': gdp_values_example})
    source = "Jeu d'exemple intégré (valeurs approximatives)"

# Calculs
df['GDP_USD'] = df['GDP_USD'].astype(float)
df['GDP_USD_milliards'] = df['GDP_USD'] / 1e9  # pour lisibilité
df['Growth_pct'] = df['GDP_USD'].pct_change() * 100  # croissance annuelle en %
df['Growth_pct_3yr_ma'] = df['Growth_pct'].rolling(window=3, min_periods=1).mean()

# Statistiques clés
start_year = df['Year'].iloc[0]
end_year = df['Year'].iloc[-1]
start_gdp = df['GDP_USD'].iloc[0]
end_gdp = df['GDP_USD'].iloc[-1]
n_years = end_year - start_year

# CAGR calcul étape par étape (précision numérique)
# CAGR = (end/start)^(1/n) - 1
cagr = (end_gdp / start_gdp) ** (1 / n_years) - 1

mean_growth = df['Growth_pct'].mean(skipna=True)
median_growth = df['Growth_pct'].median(skipna=True)
latest_growth = df['Growth_pct'].iloc[-1]

# Affichage du DataFrame à l'utilisateur (utilise l'outil d'affichage interactif)
try:
    # caas_jupyter_tools fourni dans cet environnement pour afficher les DataFrames de façon interactive
    from caas_jupyter_tools import display_dataframe_to_user
    display_dataframe_to_user("PIB - Table de données", df[['Year', 'GDP_USD_milliards', 'Growth_pct', 'Growth_pct_3yr_ma']].rename(columns={
        'GDP_USD_milliards': 'GDP (USD milliards)', 'Growth_pct': 'Croissance annuelle (%)', 'Growth_pct_3yr_ma': 'Croissance 3-ans MA (%)'
    }))
except Exception:
    # Si la fonction d'affichage interactive n'est pas disponible, imprime en console
    print(df[['Year', 'GDP_USD_milliards', 'Growth_pct', 'Growth_pct_3yr_ma']].rename(columns={
        'GDP_USD_milliards': 'GDP (USD milliards)', 'Growth_pct': 'Croissance annuelle (%)', 'Growth_pct_3yr_ma': 'Croissance 3-ans MA (%)'
    }).to_string(index=False))

# Impression des statistiques
print("\nSource des données :", source)
print(f"Période analysée : {start_year} - {end_year} ({n_years} années)")
print(f"PIB {start_year} (USD) : {start_gdp:,.0f}")
print(f"PIB {end_year} (USD) : {end_gdp:,.0f}")
print(f"CAGR sur la période : {cagr*100:.2f}% par an")
print(f"Croissance moyenne annuelle (arithmétique) : {mean_growth:.2f}%")
print(f"Médiane de la croissance annuelle : {median_growth:.2f}%")
print(f"Dernière croissance enregistrée ({end_year}) : {latest_growth:.2f}%")

# Graphiques : un graphique principal (PIB) + graphique secondaire (croissance annuelle)
fig, ax1 = plt.subplots(figsize=(10,5))
ax1.plot(df['Year'], df['GDP_USD_milliards'], marker='o')
ax1.set_xlabel('Année')
ax1.set_ylabel('PIB (USD milliards)')
ax1.set_title('PIB nominal et croissance annuelle')

ax2 = ax1.twinx()
ax2.bar(df['Year'], df['Growth_pct'], alpha=0.25)
ax2.set_ylabel('Croissance annuelle (%)')

plt.tight_layout()
plt.show()

# Export optionnel : sauvegarder en CSV (décommenter si souhaité)
# df.to_csv('/mnt/data/pib_morocco_example.csv', index=False)
# print("Fichier CSV sauvegardé : /mnt/data/pib_morocco_example.csv")